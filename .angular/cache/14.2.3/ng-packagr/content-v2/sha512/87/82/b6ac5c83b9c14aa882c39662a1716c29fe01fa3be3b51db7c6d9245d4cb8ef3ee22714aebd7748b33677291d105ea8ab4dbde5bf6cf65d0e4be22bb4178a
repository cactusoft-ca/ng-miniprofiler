{"hash":"9711c8c940519071e87f92c5f8eb99ce5d42e331","fesm2020":{"code":"import { HttpResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, Inject, Optional, SkipSelf, APP_INITIALIZER, NgModule } from '@angular/core';\nimport { tap } from 'rxjs/operators';\n\nclass MiniProfilerInterceptor {\r\n    intercept(request, next) {\r\n        return next.handle(request).pipe(tap((evt) => {\r\n            if (!(evt instanceof HttpResponse)) {\r\n                return;\r\n            }\r\n            try {\r\n                const miniProfilerHeaders = JSON.parse(evt.headers.get('X-MiniProfiler-Ids'));\r\n                this.fetchMiniProfilerResults(miniProfilerHeaders);\r\n            }\r\n            catch { }\r\n        }));\r\n    }\r\n    fetchMiniProfilerResults(ids) {\r\n        if (typeof MiniProfiler == null) {\r\n            return;\r\n        }\r\n        if (ids == null) {\r\n            return;\r\n        }\r\n        MiniProfiler.fetchResults(ids);\r\n    }\r\n}\r\nMiniProfilerInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: MiniProfilerInterceptor, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nMiniProfilerInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: MiniProfilerInterceptor });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: MiniProfilerInterceptor, decorators: [{\r\n            type: Injectable\r\n        }] });\n\nconst MINI_PROFILER_CONFIG = new InjectionToken('MiniProfilerConfig');\r\nclass MiniProfilerService {\r\n    constructor(config, other) {\r\n        this.config = config;\r\n        if (other) {\r\n            throw new Error('MiniProfilerService should only be instanciated once.');\r\n        }\r\n        if (this.config.enableGlobalMethod !== false) {\r\n            window['enableMiniProfiler'] = () => this.loadMiniProfiler(true);\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        const mpNode = document.getElementById('mini-profiler');\r\n        mpNode?.parentElement?.removeChild(mpNode);\r\n        window['enableMiniProfiler'] = null;\r\n    }\r\n    loadMiniProfiler(force = false) {\r\n        if (!force && !this.config.enabled) {\r\n            return;\r\n        }\r\n        if (document.getElementById('mini-profiler')) {\r\n            throw new Error(`An element with id 'mini-profiler' already is already present in the DOM.`);\r\n        }\r\n        const scriptElement = document.createElement('script');\r\n        scriptElement.id = 'mini-profiler';\r\n        scriptElement.async = true;\r\n        scriptElement.type = 'text/javascript';\r\n        scriptElement.src = `${this.config.baseUri}/mini-profiler-resources/includes.min.js`;\r\n        scriptElement.dataset.path = `${this.config.baseUri}/mini-profiler-resources/`;\r\n        scriptElement.dataset.position = this.config.position || 'Left';\r\n        scriptElement.dataset.scheme = this.config.colorScheme || 'Auto';\r\n        scriptElement.dataset.controls = `${this.config.showControls === true}`;\r\n        scriptElement.dataset.authorized = 'true';\r\n        scriptElement.dataset.maxTraces =\r\n            this.config.maxTraces == null ? '15' : `${this.config.maxTraces}`;\r\n        scriptElement.dataset.toggleShortcut =\r\n            this.config.toggleShortcut || 'Alt+M';\r\n        scriptElement.onload = () => console.log('MiniProfiler loaded.');\r\n        scriptElement.onerror = (err) => console.error('An error occured while loading MiniProfiler', err);\r\n        document.getElementsByTagName('body')[0].appendChild(scriptElement);\r\n    }\r\n}\r\nMiniProfilerService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: MiniProfilerService, deps: [{ token: MINI_PROFILER_CONFIG }, { token: MiniProfilerService, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nMiniProfilerService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: MiniProfilerService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: MiniProfilerService, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [MINI_PROFILER_CONFIG]\r\n                }] }, { type: MiniProfilerService, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: SkipSelf\r\n                }] }]; } });\n\nclass MiniProfilerModule {\r\n    static forRoot(config) {\r\n        return {\r\n            ngModule: MiniProfilerModule,\r\n            providers: [\r\n                MiniProfilerService,\r\n                { provide: MINI_PROFILER_CONFIG, useValue: config },\r\n                {\r\n                    provide: HTTP_INTERCEPTORS,\r\n                    useClass: MiniProfilerInterceptor,\r\n                    multi: true,\r\n                },\r\n                {\r\n                    provide: APP_INITIALIZER,\r\n                    multi: true,\r\n                    deps: [MiniProfilerService],\r\n                    useFactory: loadMiniProfilerFactory,\r\n                },\r\n            ],\r\n        };\r\n    }\r\n}\r\nMiniProfilerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: MiniProfilerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nMiniProfilerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.2\", ngImport: i0, type: MiniProfilerModule });\r\nMiniProfilerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: MiniProfilerModule });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: MiniProfilerModule, decorators: [{\r\n            type: NgModule\r\n        }] });\r\nfunction loadMiniProfilerFactory(service) {\r\n    const init = () => loadMiniProfiler(service);\r\n    return init;\r\n}\r\nfunction loadMiniProfiler(service) {\r\n    service.loadMiniProfiler();\r\n}\n\n/*\r\n * Public API Surface of ng-miniprofiler\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { MiniProfilerInterceptor, MiniProfilerModule, loadMiniProfiler, loadMiniProfilerFactory };\n//# sourceMappingURL=cactusoft-ca-ng-miniprofiler.mjs.map\n","map":{"version":3,"file":"cactusoft-ca-ng-miniprofiler.mjs","sources":["../../../projects/ng-miniprofiler/src/lib/miniprofiler.interceptor.ts","../../../projects/ng-miniprofiler/src/lib/miniprofiler.service.ts","../../../projects/ng-miniprofiler/src/lib/miniprofiler.module.ts","../../../projects/ng-miniprofiler/src/public-api.ts","../../../projects/ng-miniprofiler/src/cactusoft-ca-ng-miniprofiler.ts"],"sourcesContent":["import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpResponse,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\ndeclare const MiniProfiler:\r\n  | {\r\n      container?: HTMLElement;\r\n      fetchResults(ids: string[]): void;\r\n    }\r\n  | undefined;\r\n\r\n@Injectable()\r\nexport class MiniProfilerInterceptor implements HttpInterceptor {\r\n  public intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      tap((evt) => {\r\n        if (!(evt instanceof HttpResponse)) {\r\n          return;\r\n        }\r\n\r\n        try {\r\n          const miniProfilerHeaders = JSON.parse(\r\n            evt.headers.get('X-MiniProfiler-Ids')\r\n          );\r\n          this.fetchMiniProfilerResults(miniProfilerHeaders);\r\n        } catch {}\r\n      })\r\n    );\r\n  }\r\n\r\n  private fetchMiniProfilerResults(ids: string[]): void {\r\n    if (typeof MiniProfiler == null) {\r\n      return;\r\n    }\r\n    if (ids == null) {\r\n      return;\r\n    }\r\n\r\n    MiniProfiler.fetchResults(ids);\r\n  }\r\n}\r\n","import {\r\n  Inject,\r\n  Injectable,\r\n  InjectionToken,\r\n  OnDestroy,\r\n  Optional,\r\n  SkipSelf,\r\n} from '@angular/core';\r\nimport { MiniProfilerConfig } from './miniprofiler-config.model';\r\n\r\nexport const MINI_PROFILER_CONFIG = new InjectionToken<string>(\r\n  'MiniProfilerConfig'\r\n);\r\n\r\n@Injectable()\r\nexport class MiniProfilerService implements OnDestroy {\r\n  constructor(\r\n    @Inject(MINI_PROFILER_CONFIG) public config: MiniProfilerConfig,\r\n    @Optional() @SkipSelf() other?: MiniProfilerService\r\n  ) {\r\n    if (other) {\r\n      throw new Error('MiniProfilerService should only be instanciated once.');\r\n    }\r\n\r\n    if (this.config.enableGlobalMethod !== false) {\r\n      window['enableMiniProfiler'] = () => this.loadMiniProfiler(true);\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    const mpNode = document.getElementById('mini-profiler');\r\n    mpNode?.parentElement?.removeChild(mpNode);\r\n    window['enableMiniProfiler'] = null;\r\n  }\r\n\r\n  public loadMiniProfiler(force: boolean = false): void {\r\n    if (!force && !this.config.enabled) {\r\n      return;\r\n    }\r\n\r\n    if (document.getElementById('mini-profiler')) {\r\n      throw new Error(\r\n        `An element with id 'mini-profiler' already is already present in the DOM.`\r\n      );\r\n    }\r\n\r\n    const scriptElement = document.createElement('script');\r\n    scriptElement.id = 'mini-profiler';\r\n    scriptElement.async = true;\r\n    scriptElement.type = 'text/javascript';\r\n    scriptElement.src = `${this.config.baseUri}/mini-profiler-resources/includes.min.js`;\r\n    scriptElement.dataset.path = `${this.config.baseUri}/mini-profiler-resources/`;\r\n    scriptElement.dataset.position = this.config.position || 'Left';\r\n    scriptElement.dataset.scheme = this.config.colorScheme || 'Auto';\r\n    scriptElement.dataset.controls = `${this.config.showControls === true}`;\r\n    scriptElement.dataset.authorized = 'true';\r\n    scriptElement.dataset.maxTraces =\r\n      this.config.maxTraces == null ? '15' : `${this.config.maxTraces}`;\r\n    scriptElement.dataset.toggleShortcut =\r\n      this.config.toggleShortcut || 'Alt+M';\r\n    scriptElement.onload = () => console.log('MiniProfiler loaded.');\r\n    scriptElement.onerror = (err: any) =>\r\n      console.error('An error occured while loading MiniProfiler', err);\r\n\r\n    document.getElementsByTagName('body')[0].appendChild(scriptElement);\r\n  }\r\n}\r\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { MiniProfilerConfig } from './miniprofiler-config.model';\r\nimport { MiniProfilerInterceptor } from './miniprofiler.interceptor';\r\nimport {\r\n  MiniProfilerService,\r\n  MINI_PROFILER_CONFIG,\r\n} from './miniprofiler.service';\r\n\r\n@NgModule()\r\nexport class MiniProfilerModule {\r\n  static forRoot(\r\n    config: MiniProfilerConfig\r\n  ): ModuleWithProviders<MiniProfilerModule> {\r\n    return {\r\n      ngModule: MiniProfilerModule,\r\n      providers: [\r\n        MiniProfilerService,\r\n        { provide: MINI_PROFILER_CONFIG, useValue: config },\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: MiniProfilerInterceptor,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [MiniProfilerService],\r\n          useFactory: loadMiniProfilerFactory,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n\r\nexport function loadMiniProfilerFactory(\r\n  service: MiniProfilerService\r\n): () => void {\r\n  const init = () => loadMiniProfiler(service);\r\n  return init;\r\n}\r\n\r\nexport function loadMiniProfiler(service: MiniProfilerService): void {\r\n  service.loadMiniProfiler();\r\n}\r\n","/*\r\n * Public API Surface of ng-miniprofiler\r\n */\r\n\r\nexport * from './lib/miniprofiler.interceptor';\r\nexport * from './lib/miniprofiler.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"import { HttpResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, Inject, Optional, SkipSelf, APP_INITIALIZER, NgModule } from '@angular/core';\nimport { tap } from 'rxjs/operators';\n\nclass MiniProfilerInterceptor {\r\n    intercept(request, next) {\r\n        return next.handle(request).pipe(tap((evt) => {\r\n            if (!(evt instanceof HttpResponse)) {\r\n                return;\r\n            }\r\n            try {\r\n                const miniProfilerHeaders = JSON.parse(evt.headers.get('X-MiniProfiler-Ids'));\r\n                this.fetchMiniProfilerResults(miniProfilerHeaders);\r\n            }\r\n            catch (_a) { }\r\n        }));\r\n    }\r\n    fetchMiniProfilerResults(ids) {\r\n        if (typeof MiniProfiler == null) {\r\n            return;\r\n        }\r\n        if (ids == null) {\r\n            return;\r\n        }\r\n        MiniProfiler.fetchResults(ids);\r\n    }\r\n}\r\nMiniProfilerInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: MiniProfilerInterceptor, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nMiniProfilerInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: MiniProfilerInterceptor });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: MiniProfilerInterceptor, decorators: [{\r\n            type: Injectable\r\n        }] });\n\nconst MINI_PROFILER_CONFIG = new InjectionToken('MiniProfilerConfig');\r\nclass MiniProfilerService {\r\n    constructor(config, other) {\r\n        this.config = config;\r\n        if (other) {\r\n            throw new Error('MiniProfilerService should only be instanciated once.');\r\n        }\r\n        if (this.config.enableGlobalMethod !== false) {\r\n            window['enableMiniProfiler'] = () => this.loadMiniProfiler(true);\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        var _a;\r\n        const mpNode = document.getElementById('mini-profiler');\r\n        (_a = mpNode === null || mpNode === void 0 ? void 0 : mpNode.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(mpNode);\r\n        window['enableMiniProfiler'] = null;\r\n    }\r\n    loadMiniProfiler(force = false) {\r\n        if (!force && !this.config.enabled) {\r\n            return;\r\n        }\r\n        if (document.getElementById('mini-profiler')) {\r\n            throw new Error(`An element with id 'mini-profiler' already is already present in the DOM.`);\r\n        }\r\n        const scriptElement = document.createElement('script');\r\n        scriptElement.id = 'mini-profiler';\r\n        scriptElement.async = true;\r\n        scriptElement.type = 'text/javascript';\r\n        scriptElement.src = `${this.config.baseUri}/mini-profiler-resources/includes.min.js`;\r\n        scriptElement.dataset.path = `${this.config.baseUri}/mini-profiler-resources/`;\r\n        scriptElement.dataset.position = this.config.position || 'Left';\r\n        scriptElement.dataset.scheme = this.config.colorScheme || 'Auto';\r\n        scriptElement.dataset.controls = `${this.config.showControls === true}`;\r\n        scriptElement.dataset.authorized = 'true';\r\n        scriptElement.dataset.maxTraces =\r\n            this.config.maxTraces == null ? '15' : `${this.config.maxTraces}`;\r\n        scriptElement.dataset.toggleShortcut =\r\n            this.config.toggleShortcut || 'Alt+M';\r\n        scriptElement.onload = () => console.log('MiniProfiler loaded.');\r\n        scriptElement.onerror = (err) => console.error('An error occured while loading MiniProfiler', err);\r\n        document.getElementsByTagName('body')[0].appendChild(scriptElement);\r\n    }\r\n}\r\nMiniProfilerService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: MiniProfilerService, deps: [{ token: MINI_PROFILER_CONFIG }, { token: MiniProfilerService, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nMiniProfilerService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: MiniProfilerService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: MiniProfilerService, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () {\r\n        return [{ type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [MINI_PROFILER_CONFIG]\r\n                    }] }, { type: MiniProfilerService, decorators: [{\r\n                        type: Optional\r\n                    }, {\r\n                        type: SkipSelf\r\n                    }] }];\r\n    } });\n\nclass MiniProfilerModule {\r\n    static forRoot(config) {\r\n        return {\r\n            ngModule: MiniProfilerModule,\r\n            providers: [\r\n                MiniProfilerService,\r\n                { provide: MINI_PROFILER_CONFIG, useValue: config },\r\n                {\r\n                    provide: HTTP_INTERCEPTORS,\r\n                    useClass: MiniProfilerInterceptor,\r\n                    multi: true,\r\n                },\r\n                {\r\n                    provide: APP_INITIALIZER,\r\n                    multi: true,\r\n                    deps: [MiniProfilerService],\r\n                    useFactory: loadMiniProfilerFactory,\r\n                },\r\n            ],\r\n        };\r\n    }\r\n}\r\nMiniProfilerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: MiniProfilerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nMiniProfilerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.2\", ngImport: i0, type: MiniProfilerModule });\r\nMiniProfilerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: MiniProfilerModule });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: MiniProfilerModule, decorators: [{\r\n            type: NgModule\r\n        }] });\r\nfunction loadMiniProfilerFactory(service) {\r\n    const init = () => loadMiniProfiler(service);\r\n    return init;\r\n}\r\nfunction loadMiniProfiler(service) {\r\n    service.loadMiniProfiler();\r\n}\n\n/*\r\n * Public API Surface of ng-miniprofiler\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { MiniProfilerInterceptor, MiniProfilerModule, loadMiniProfiler, loadMiniProfilerFactory };\n//# sourceMappingURL=cactusoft-ca-ng-miniprofiler.mjs.map\n","map":{"version":3,"file":"cactusoft-ca-ng-miniprofiler.mjs","sources":["../../../projects/ng-miniprofiler/src/lib/miniprofiler.interceptor.ts","../../../projects/ng-miniprofiler/src/lib/miniprofiler.service.ts","../../../projects/ng-miniprofiler/src/lib/miniprofiler.module.ts","../../../projects/ng-miniprofiler/src/public-api.ts","../../../projects/ng-miniprofiler/src/cactusoft-ca-ng-miniprofiler.ts"],"sourcesContent":["import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpResponse,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\ndeclare const MiniProfiler:\r\n  | {\r\n      container?: HTMLElement;\r\n      fetchResults(ids: string[]): void;\r\n    }\r\n  | undefined;\r\n\r\n@Injectable()\r\nexport class MiniProfilerInterceptor implements HttpInterceptor {\r\n  public intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      tap((evt) => {\r\n        if (!(evt instanceof HttpResponse)) {\r\n          return;\r\n        }\r\n\r\n        try {\r\n          const miniProfilerHeaders = JSON.parse(\r\n            evt.headers.get('X-MiniProfiler-Ids')\r\n          );\r\n          this.fetchMiniProfilerResults(miniProfilerHeaders);\r\n        } catch {}\r\n      })\r\n    );\r\n  }\r\n\r\n  private fetchMiniProfilerResults(ids: string[]): void {\r\n    if (typeof MiniProfiler == null) {\r\n      return;\r\n    }\r\n    if (ids == null) {\r\n      return;\r\n    }\r\n\r\n    MiniProfiler.fetchResults(ids);\r\n  }\r\n}\r\n","import {\r\n  Inject,\r\n  Injectable,\r\n  InjectionToken,\r\n  OnDestroy,\r\n  Optional,\r\n  SkipSelf,\r\n} from '@angular/core';\r\nimport { MiniProfilerConfig } from './miniprofiler-config.model';\r\n\r\nexport const MINI_PROFILER_CONFIG = new InjectionToken<string>(\r\n  'MiniProfilerConfig'\r\n);\r\n\r\n@Injectable()\r\nexport class MiniProfilerService implements OnDestroy {\r\n  constructor(\r\n    @Inject(MINI_PROFILER_CONFIG) public config: MiniProfilerConfig,\r\n    @Optional() @SkipSelf() other?: MiniProfilerService\r\n  ) {\r\n    if (other) {\r\n      throw new Error('MiniProfilerService should only be instanciated once.');\r\n    }\r\n\r\n    if (this.config.enableGlobalMethod !== false) {\r\n      window['enableMiniProfiler'] = () => this.loadMiniProfiler(true);\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    const mpNode = document.getElementById('mini-profiler');\r\n    mpNode?.parentElement?.removeChild(mpNode);\r\n    window['enableMiniProfiler'] = null;\r\n  }\r\n\r\n  public loadMiniProfiler(force: boolean = false): void {\r\n    if (!force && !this.config.enabled) {\r\n      return;\r\n    }\r\n\r\n    if (document.getElementById('mini-profiler')) {\r\n      throw new Error(\r\n        `An element with id 'mini-profiler' already is already present in the DOM.`\r\n      );\r\n    }\r\n\r\n    const scriptElement = document.createElement('script');\r\n    scriptElement.id = 'mini-profiler';\r\n    scriptElement.async = true;\r\n    scriptElement.type = 'text/javascript';\r\n    scriptElement.src = `${this.config.baseUri}/mini-profiler-resources/includes.min.js`;\r\n    scriptElement.dataset.path = `${this.config.baseUri}/mini-profiler-resources/`;\r\n    scriptElement.dataset.position = this.config.position || 'Left';\r\n    scriptElement.dataset.scheme = this.config.colorScheme || 'Auto';\r\n    scriptElement.dataset.controls = `${this.config.showControls === true}`;\r\n    scriptElement.dataset.authorized = 'true';\r\n    scriptElement.dataset.maxTraces =\r\n      this.config.maxTraces == null ? '15' : `${this.config.maxTraces}`;\r\n    scriptElement.dataset.toggleShortcut =\r\n      this.config.toggleShortcut || 'Alt+M';\r\n    scriptElement.onload = () => console.log('MiniProfiler loaded.');\r\n    scriptElement.onerror = (err: any) =>\r\n      console.error('An error occured while loading MiniProfiler', err);\r\n\r\n    document.getElementsByTagName('body')[0].appendChild(scriptElement);\r\n  }\r\n}\r\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { MiniProfilerConfig } from './miniprofiler-config.model';\r\nimport { MiniProfilerInterceptor } from './miniprofiler.interceptor';\r\nimport {\r\n  MiniProfilerService,\r\n  MINI_PROFILER_CONFIG,\r\n} from './miniprofiler.service';\r\n\r\n@NgModule()\r\nexport class MiniProfilerModule {\r\n  static forRoot(\r\n    config: MiniProfilerConfig\r\n  ): ModuleWithProviders<MiniProfilerModule> {\r\n    return {\r\n      ngModule: MiniProfilerModule,\r\n      providers: [\r\n        MiniProfilerService,\r\n        { provide: MINI_PROFILER_CONFIG, useValue: config },\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: MiniProfilerInterceptor,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [MiniProfilerService],\r\n          useFactory: loadMiniProfilerFactory,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n\r\nexport function loadMiniProfilerFactory(\r\n  service: MiniProfilerService\r\n): () => void {\r\n  const init = () => loadMiniProfiler(service);\r\n  return init;\r\n}\r\n\r\nexport function loadMiniProfiler(service: MiniProfilerService): void {\r\n  service.loadMiniProfiler();\r\n}\r\n","/*\r\n * Public API Surface of ng-miniprofiler\r\n */\r\n\r\nexport * from './lib/miniprofiler.interceptor';\r\nexport * from './lib/miniprofiler.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}}}